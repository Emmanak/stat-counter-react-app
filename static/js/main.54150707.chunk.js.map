{"version":3,"sources":["logo.svg","components/pushbutton.jsx","components/colorbutton.jsx","components/createbutton.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","PushButton","state","id","props","name","value","button_color","color","handleIncrement","setState","handleDecrement","className","onClick","this","buttonStyle","onDelete","concat","Component","ColorButton","c_id","c_class","type","selectColor","CreateButton","buttons","counter","colorbuttons","class_id","currentColor","readInput","event","document","getElementById","length","button","push","window","alert","handleDelete","button_id","confirm","filter","buttonColor","undefined","role","aria-label","map","key","placeholder","Fragment","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.54150707.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n\r\nclass PushButton extends Component {\r\n    state = {\r\n        id: this.props.id,\r\n        name: this.props.name,\r\n        value: this.props.value,\r\n        button_color: this.props.color \r\n     }\r\n    render() { \r\n        return (\r\n            \r\n            <div className=\"row row-m-t disable-dbl-tap-zoom outer\">\r\n               \r\n                \r\n                    <button className=\"btn btn-lg btn-secondary col-1 mr-2\" onClick={this.handleDecrement}><b>-</b></button>\r\n                    <span className=\"mr-2\"><b>{this.state.value}</b></span>\r\n                    \r\n                    \r\n                    <button name={this.state.name} id={this.state.id} className={this.buttonStyle()} color=\"pink\" onClick={this.handleIncrement}>\r\n                {this.state.name}\r\n                </button>\r\n                \r\n                    <button className=\"btn btn-lg btn-danger col-1\" onClick={() => this.props.onDelete(this.props.id)}>X</button>\r\n            \r\n            </div>\r\n            \r\n\r\n\r\n          );\r\n    }\r\n\r\n    buttonStyle() {\r\n        //let { id } = this.state;\r\n        \r\n        return 'btn btn-lg col-7 mr-5 btn-'.concat(this.state.button_color);\r\n        \r\n    }\r\n\r\n    badgeStyle() {\r\n        const { value } = this.state;\r\n        if( value === 0) {\r\n            return 'badge badge-warning badge-lg col-1 mr-2 align-left';\r\n        }\r\n        else{\r\n            return 'badge badge-info badge-lg col-1 mr-2 align-middle';\r\n        }\r\n    }\r\n\r\n    handleIncrement = () => {\r\n        this.setState({value: this.state.value +1 });\r\n    }\r\n\r\n    handleDecrement = () => {\r\n        if(this.state.value > 0){\r\n            this.setState({value: this.state.value -1 });\r\n\r\n        }\r\n    }\r\n\r\n}\r\nexport default PushButton;\r\n","import React, { Component } from 'react';\r\n\r\nclass ColorButton extends Component {\r\n    state = { \r\n        c_id: this.props.id,\r\n        c_class: this.props.className,\r\n        name: this.props.name,\r\n        type: this.props.type \r\n    }\r\n    render() { \r\n        return ( \r\n        <button id={this.state.c_id} type={this.state.type} className={this.state.c_class} onClick={()=> this.props.selectColor(this.props.id)}>{this.state.name}</button>\r\n             );\r\n    }\r\n}\r\n \r\nexport default ColorButton;","import React, { Component } from 'react';\r\nimport PushButton from './pushbutton';\r\nimport ColorButton from './colorbutton';\r\n\r\n\r\nclass CreateButton extends Component {\r\n    state = { buttons: [],\r\n        counter: 0,\r\n        colorbuttons: [\r\n            {c_id : \"c1\",  class_id : \"primary\", color : \"Blue\"},\r\n            {c_id : \"c2\",  class_id : \"secondary\", color : \"Grey\"},\r\n            {c_id : \"c3\",  class_id : \"success\", color : \"Green\"},\r\n            {c_id : \"c4\",  class_id : \"danger\", color : \"Red\"},\r\n            {c_id : \"c5\",  class_id : \"warning\", color : \"Yellow\"},\r\n            {c_id : \"c6\",  class_id : \"info\", color : \"Turquoise\"}\r\n        ],\r\n        currentColor: \"primary\"\r\n    };\r\n    render() {\r\n        let {buttons } = this.state;\r\n        if(buttons === undefined || buttons.length === 0){\r\n            return ( \r\n            <div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <span className=\"text mx-auto\">Select Color:</span>\r\n                    </div>\r\n                    <div className=\"row row-m-t\">\r\n                        <div className=\"btn-group mx-auto mr-2 outer\" role=\"group\" aria-label=\"Basic example\">\r\n                            {this.state.colorbuttons.map(button => (<ColorButton key={button.c_id} id={button.class_id} type=\"button\" \r\n                            selectColor={this.buttonColor} name={button.color} className={'btn btn-'.concat(button.class_id)}>{button.color}</ColorButton>))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"input-group input-group-lg col-8 mx-auto\">\r\n                    <input type=\"text\" className=\"form-control\" id=\"create-button\" placeholder=\"Button name\"></input>\r\n                    <div className=\"input-group-append\"><button onClick={this.readInput} className=\"btn btn-primary btn-lg\">OK</button>\r\n                    </div>\r\n                </div>\r\n                    \r\n            </div>\r\n            \r\n         );\r\n\r\n        }\r\n         return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"container\">\r\n                    {this.state.buttons.map(button => (<PushButton key={button.id} id={button.id} value={button.value} \r\n                    name={button.name} color={this.state.currentColor} onDelete={this.handleDelete}></PushButton>))}\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <span className=\"text mx-auto\">Select Color:</span>\r\n                    </div>\r\n                    <div className=\"row row-m-t\">\r\n                            <div className=\"btn-group mx-auto mr-2 outer\" role=\"group\" aria-label=\"Basic example\">\r\n                                {this.state.colorbuttons.map(button => (<ColorButton key={button.c_id} id={button.class_id} type=\"button\" \r\n                                selectColor={this.buttonColor} name={button.color} className={'btn btn-'.concat(button.class_id)}>{button.color}</ColorButton>))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                    \r\n                <div className=\"input-group input-group-lg col-8 mx-auto\">\r\n                    <input type=\"text\" className=\"form-control\" id=\"create-button\" placeholder=\"Enter button name\"></input>\r\n                    <div className=\"input-group-append\"><button onClick={this.readInput} className=\"btn btn-primary btn-lg\">OK</button>\r\n                    </div>\r\n                </div>\r\n                    \r\n            </React.Fragment>\r\n\r\n         );\r\n    }\r\n\r\n    readInput = (event) => {\r\n        \r\n        var name = document.getElementById(\"create-button\").value;\r\n        \r\n        if(name.length === 0){\r\n            window.alert(\"Please give your button a name.\");\r\n            return;\r\n        }\r\n\r\n        let {buttons, counter} = this.state;\r\n\r\n        var button = {id: 1, value: 0, name: name};\r\n\r\n        counter = counter + 1;\r\n        button.id = counter;\r\n        button.value = 0;\r\n        button.name = name;\r\n        buttons.push(button)\r\n        \r\n        \r\n        this.setState( {buttons: buttons});\r\n        this.setState({counter: counter});\r\n        //console.log(this.state);\r\n        \r\n    }\r\n\r\n    handleDelete = (button_id) => {\r\n        var confirmDelete = window.confirm(\"Are you sure you want to delete this button?\");\r\n        if(confirmDelete === true){\r\n            let buttons = this.state.buttons.filter(button => button.id !== button_id);\r\n            this.setState({buttons: buttons});\r\n        }\r\n        \r\n    \r\n    }\r\n\r\n    buttonColor = (button_color) => {\r\n        \r\n        this.setState({currentColor: button_color});\r\n\r\n    }\r\n\r\n}\r\n \r\nexport default CreateButton;\r\n\r\n//<PushButton id={this.state.id} value={this.state.value} name={this.state.name}></PushButton>","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport CreateButton from './components/createbutton';\n\nfunction App() {\n  return (\n    <div>\n      <br></br>\n      <CreateButton></CreateButton>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}